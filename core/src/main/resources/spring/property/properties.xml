<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 加载方式一 -->
    <!--此时springboot默认加载的application-default.properties和@PropertySource注入都不起作用-->
    <!--<bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">-->
        <!--<property name="locations">-->
            <!--<list>-->
                <!--<value>classpath:application-dev.properties</value>-->
                <!--<value>classpath:application-test.properties</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
    <!--<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">-->
        <!--<property name="properties" ref="configProperties"/>-->
    <!--</bean>-->


    <!-- 加载方式二,可加载多个配置文件。前后2个配置文件中的属性名相同时，后者会覆盖前者的值-->
    <!--可与springboot的默认加载(application-default.properties)、@PropertySource注入共同起作用-->
    <!--<context:property-placeholder location="classpath:application-test.properties"/>-->


    <!-- 加载方式三 -->
    <!--可与springboot的默认加载(application-default.properties)、@PropertySource注入共同起作用-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <!--<value>classpath:application-dev.properties</value>-->
                <value>classpath:application-test.properties</value>
            </list>
        </property>
    </bean>

</beans>